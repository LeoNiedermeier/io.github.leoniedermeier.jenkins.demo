// Einfaches Jenkinsfile 
 pipeline {
  agent any 
  options {
    skipStagesAfterUnstable()
  }
  
  stages {
    stage('Clone') {
      steps {
        checkout scm
      }
    }
  	stage('Tag') {
  	  steps {
        sh "git tag -a release-${ReleaseVersion} -m \"Release ${ReleaseVersion}\""	
      }
	}
    stage('Maven: clean deploy') {
      agent {
        docker {
          image 'maven:3-alpine'
          args '-v /root/.m2:/root/.m2 --network=host '
        }
      }
      steps {
        configFileProvider([configFile(fileId: 'jenkins-maven-settings', variable: 'MAVEN_SETTINGS')]) {
          sh "mvn -s ${MAVEN_SETTINGS}  fr.jcgay.maven.plugins:buildplan-maven-plugin:list-phase   -Dbuildplan.tasks=clean,deploy"
          // Mit CI fiendly versions:
          sh "mvn -s ${MAVEN_SETTINGS} -Drevision=${ReleaseVersion} clean deploy"
        }
      }
      post {
        always {
          junit allowEmptyResults: true, testResults: 'target/surefire-reports/*.xml' 
        }
      }
    }
    stage('push tag') {
      steps {
         //  https://issues.jenkins-ci.org/browse/JENKINS-28335
          sh 'git config --local credential.helper "! echo username=\\$GIT_USERNAME; echo password=\\$GIT_PASSWORD;"'
          withCredentials([usernamePassword(credentialsId: 'git-pass-credentials-ID', passwordVariable: 'GIT_PASSWORD', usernameVariable: 'GIT_USERNAME')]) {
            sh "git push origin release-${ReleaseVersion}"
        }
      }
      post {
        always {
          sh 'git config --local --unset credential.helper'
        }
      }
    }  
  }
}
